/*
 * pronimbusapi_lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

package models_pkg

import(
    "encoding/json"
)

/**
 * Type definition for AltLocationTypeEnum enum
 */
type AltLocationTypeEnum int

/**
 * Value collection for AltLocationTypeEnum enum
 */
const (
    AltLocationType_HAL AltLocationTypeEnum = 1 + iota
    AltLocationType_ACP
)

func (r AltLocationTypeEnum) MarshalJSON() ([]byte, error) { 
    s := AltLocationTypeEnumToValue(r)
    return json.Marshal(s) 
} 

func (r *AltLocationTypeEnum) UnmarshalJSON(data []byte) error { 
    var s string 
    json.Unmarshal(data, &s)
    v :=  AltLocationTypeEnumFromValue(s)
    *r = v 
    return nil 
 } 


/**
 * Converts AltLocationTypeEnum to its string representation
 */
func AltLocationTypeEnumToValue(altLocationTypeEnum AltLocationTypeEnum) string {
    switch altLocationTypeEnum {
        case AltLocationType_HAL:
    		return "HAL"		
        case AltLocationType_ACP:
    		return "ACP"		
        default:
        	return "HAL"
    }
}

/**
 * Converts AltLocationTypeEnum Array to its string Array representation
*/
func AltLocationTypeEnumArrayToValue(altLocationTypeEnum []AltLocationTypeEnum) []string {
    convArray := make([]string,len( altLocationTypeEnum))
    for i:=0; i<len(altLocationTypeEnum);i++ {
        convArray[i] = AltLocationTypeEnumToValue(altLocationTypeEnum[i])
    }
    return convArray
}


/**
 * Converts given value to its enum representation
 */
func AltLocationTypeEnumFromValue(value string) AltLocationTypeEnum {
    switch value {
        case "HAL":
            return AltLocationType_HAL
        case "ACP":
            return AltLocationType_ACP
        default:
            return AltLocationType_HAL
    }
}
