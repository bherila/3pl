/*
 * pronimbusapi_lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

package models_pkg

import(
    "encoding/json"
)

/**
 * Type definition for PendingEnum enum
 */
type PendingEnum int

/**
 * Value collection for PendingEnum enum
 */
const (
    Pending_Y PendingEnum = 1 + iota
    Pending_N
)

func (r PendingEnum) MarshalJSON() ([]byte, error) { 
    s := PendingEnumToValue(r)
    return json.Marshal(s) 
} 

func (r *PendingEnum) UnmarshalJSON(data []byte) error { 
    var s string 
    json.Unmarshal(data, &s)
    v :=  PendingEnumFromValue(s)
    *r = v 
    return nil 
 } 


/**
 * Converts PendingEnum to its string representation
 */
func PendingEnumToValue(pendingEnum PendingEnum) string {
    switch pendingEnum {
        case Pending_Y:
    		return "Y"		
        case Pending_N:
    		return "N"		
        default:
        	return "Y"
    }
}

/**
 * Converts PendingEnum Array to its string Array representation
*/
func PendingEnumArrayToValue(pendingEnum []PendingEnum) []string {
    convArray := make([]string,len( pendingEnum))
    for i:=0; i<len(pendingEnum);i++ {
        convArray[i] = PendingEnumToValue(pendingEnum[i])
    }
    return convArray
}


/**
 * Converts given value to its enum representation
 */
func PendingEnumFromValue(value string) PendingEnum {
    switch value {
        case "Y":
            return Pending_Y
        case "N":
            return Pending_N
        default:
            return Pending_Y
    }
}
