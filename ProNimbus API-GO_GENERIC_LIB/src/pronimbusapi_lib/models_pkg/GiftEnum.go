/*
 * pronimbusapi_lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

package models_pkg

import(
    "encoding/json"
)

/**
 * Type definition for GiftEnum enum
 */
type GiftEnum int

/**
 * Value collection for GiftEnum enum
 */
const (
    Gift_Y GiftEnum = 1 + iota
    Gift_N
)

func (r GiftEnum) MarshalJSON() ([]byte, error) { 
    s := GiftEnumToValue(r)
    return json.Marshal(s) 
} 

func (r *GiftEnum) UnmarshalJSON(data []byte) error { 
    var s string 
    json.Unmarshal(data, &s)
    v :=  GiftEnumFromValue(s)
    *r = v 
    return nil 
 } 


/**
 * Converts GiftEnum to its string representation
 */
func GiftEnumToValue(giftEnum GiftEnum) string {
    switch giftEnum {
        case Gift_Y:
    		return "Y"		
        case Gift_N:
    		return "N"		
        default:
        	return "Y"
    }
}

/**
 * Converts GiftEnum Array to its string Array representation
*/
func GiftEnumArrayToValue(giftEnum []GiftEnum) []string {
    convArray := make([]string,len( giftEnum))
    for i:=0; i<len(giftEnum);i++ {
        convArray[i] = GiftEnumToValue(giftEnum[i])
    }
    return convArray
}


/**
 * Converts given value to its enum representation
 */
func GiftEnumFromValue(value string) GiftEnum {
    switch value {
        case "Y":
            return Gift_Y
        case "N":
            return Gift_N
        default:
            return Gift_Y
    }
}
