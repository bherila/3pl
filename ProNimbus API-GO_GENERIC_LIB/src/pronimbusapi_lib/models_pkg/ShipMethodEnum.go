/*
 * pronimbusapi_lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

package models_pkg

import(
    "encoding/json"
)

/**
 * Type definition for ShipMethodEnum enum
 */
type ShipMethodEnum int

/**
 * Value collection for ShipMethodEnum enum
 */
const (
    ShipMethod_UP2 ShipMethodEnum = 1 + iota
    ShipMethod_UP3
    ShipMethod_UPS
    ShipMethod_UP1
    ShipMethod_UPS7
    ShipMethod_FEX
    ShipMethod_FXE
    ShipMethod_FXG
    ShipMethod_FEH
    ShipMethod_FXP
    ShipMethod_FXO
    ShipMethod_GSC
    ShipMethod_GSP
    ShipMethod_GSO3
    ShipMethod_WCP
    ShipMethod_WCU
    ShipMethod_WCX
    ShipMethod_UDS
    ShipMethod_AZS
    ShipMethod_TRANSFER
)

func (r ShipMethodEnum) MarshalJSON() ([]byte, error) { 
    s := ShipMethodEnumToValue(r)
    return json.Marshal(s) 
} 

func (r *ShipMethodEnum) UnmarshalJSON(data []byte) error { 
    var s string 
    json.Unmarshal(data, &s)
    v :=  ShipMethodEnumFromValue(s)
    *r = v 
    return nil 
 } 


/**
 * Converts ShipMethodEnum to its string representation
 */
func ShipMethodEnumToValue(shipMethodEnum ShipMethodEnum) string {
    switch shipMethodEnum {
        case ShipMethod_UP2:
    		return "UP2"		
        case ShipMethod_UP3:
    		return "UP3"		
        case ShipMethod_UPS:
    		return "UPS"		
        case ShipMethod_UP1:
    		return "UP1"		
        case ShipMethod_UPS7:
    		return "UPS7"		
        case ShipMethod_FEX:
    		return "FEX"		
        case ShipMethod_FXE:
    		return "FXE"		
        case ShipMethod_FXG:
    		return "FXG"		
        case ShipMethod_FEH:
    		return "FEH"		
        case ShipMethod_FXP:
    		return "FXP"		
        case ShipMethod_FXO:
    		return "FXO"		
        case ShipMethod_GSC:
    		return "GSC"		
        case ShipMethod_GSP:
    		return "GSP"		
        case ShipMethod_GSO3:
    		return "GSO3"		
        case ShipMethod_WCP:
    		return "WCP"		
        case ShipMethod_WCU:
    		return "WCU"		
        case ShipMethod_WCX:
    		return "WCX"		
        case ShipMethod_UDS:
    		return "UDS"		
        case ShipMethod_AZS:
    		return "AZS"		
        case ShipMethod_TRANSFER:
    		return "Transfer"		
        default:
        	return "UP2"
    }
}

/**
 * Converts ShipMethodEnum Array to its string Array representation
*/
func ShipMethodEnumArrayToValue(shipMethodEnum []ShipMethodEnum) []string {
    convArray := make([]string,len( shipMethodEnum))
    for i:=0; i<len(shipMethodEnum);i++ {
        convArray[i] = ShipMethodEnumToValue(shipMethodEnum[i])
    }
    return convArray
}


/**
 * Converts given value to its enum representation
 */
func ShipMethodEnumFromValue(value string) ShipMethodEnum {
    switch value {
        case "UP2":
            return ShipMethod_UP2
        case "UP3":
            return ShipMethod_UP3
        case "UPS":
            return ShipMethod_UPS
        case "UP1":
            return ShipMethod_UP1
        case "UPS7":
            return ShipMethod_UPS7
        case "FEX":
            return ShipMethod_FEX
        case "FXE":
            return ShipMethod_FXE
        case "FXG":
            return ShipMethod_FXG
        case "FEH":
            return ShipMethod_FEH
        case "FXP":
            return ShipMethod_FXP
        case "FXO":
            return ShipMethod_FXO
        case "GSC":
            return ShipMethod_GSC
        case "GSP":
            return ShipMethod_GSP
        case "GSO3":
            return ShipMethod_GSO3
        case "WCP":
            return ShipMethod_WCP
        case "WCU":
            return ShipMethod_WCU
        case "WCX":
            return ShipMethod_WCX
        case "UDS":
            return ShipMethod_UDS
        case "AZS":
            return ShipMethod_AZS
        case "Transfer":
            return ShipMethod_TRANSFER
        default:
            return ShipMethod_UP2
    }
}
