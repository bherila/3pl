/*
 * pronimbusapi_lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

package models_pkg

import(
    "encoding/json"
)

/**
 * Type definition for SlotEquivalentEnum enum
 */
type SlotEquivalentEnum int

/**
 * Value collection for SlotEquivalentEnum enum
 */
const (
    SlotEquivalent_ENUM_0ML SlotEquivalentEnum = 1 + iota
    SlotEquivalent_ENUM_7ML
    SlotEquivalent_ENUM_50ML
    SlotEquivalent_ENUM_100ML
    SlotEquivalent_ENUM_125ML
    SlotEquivalent_ENUM_147ML
    SlotEquivalent_ENUM_187ML
    SlotEquivalent_ENUM_200ML
    SlotEquivalent_ENUM_250ML
    SlotEquivalent_ENUM_300ML
    SlotEquivalent_ENUM_330ML
    SlotEquivalent_ENUM_333ML
    SlotEquivalent_ENUM_341ML
    SlotEquivalent_ENUM_350ML
    SlotEquivalent_ENUM_355ML
    SlotEquivalent_ENUM_375ML
    SlotEquivalent_ENUM_376ML
    SlotEquivalent_ENUM_500ML
    SlotEquivalent_ENUM_620ML
    SlotEquivalent_ENUM_650ML
    SlotEquivalent_ENUM_680ML
    SlotEquivalent_ENUM_700ML
    SlotEquivalent_ENUM_720ML
    SlotEquivalent_ENUM_750ML
    SlotEquivalent_ENUM_751ML
    SlotEquivalent_ENUM_800ML
    SlotEquivalent_ENUM_1000ML
    SlotEquivalent_ENUM_1500ML
    SlotEquivalent_ENUM_1750ML
    SlotEquivalent_ENUM_1800ML
    SlotEquivalent_ENUM_1875ML
    SlotEquivalent_ENUM_2000ML
    SlotEquivalent_ENUM_3000ML
    SlotEquivalent_ENUM_4500ML
    SlotEquivalent_ENUM_5000ML
    SlotEquivalent_ENUM_6000ML
    SlotEquivalent_ENUM_9000ML
    SlotEquivalent_ENUM_10000ML
    SlotEquivalent_ENUM_12000ML
    SlotEquivalent_ENUM_15000ML
    SlotEquivalent_ENUM_18000ML
    SlotEquivalent_ENUM_19500ML
    SlotEquivalent_ENUM_20000ML
    SlotEquivalent_ENUM_27000ML
    SlotEquivalent_ENUM_50000ML
    SlotEquivalent_ENUM_56000ML
)

func (r SlotEquivalentEnum) MarshalJSON() ([]byte, error) { 
    s := SlotEquivalentEnumToValue(r)
    return json.Marshal(s) 
} 

func (r *SlotEquivalentEnum) UnmarshalJSON(data []byte) error { 
    var s string 
    json.Unmarshal(data, &s)
    v :=  SlotEquivalentEnumFromValue(s)
    *r = v 
    return nil 
 } 


/**
 * Converts SlotEquivalentEnum to its string representation
 */
func SlotEquivalentEnumToValue(slotEquivalentEnum SlotEquivalentEnum) string {
    switch slotEquivalentEnum {
        case SlotEquivalent_ENUM_0ML:
    		return "Enum_0ml"		
        case SlotEquivalent_ENUM_7ML:
    		return "Enum_7ml"		
        case SlotEquivalent_ENUM_50ML:
    		return "Enum_50ml"		
        case SlotEquivalent_ENUM_100ML:
    		return "Enum_100ml"		
        case SlotEquivalent_ENUM_125ML:
    		return "Enum_125ml"		
        case SlotEquivalent_ENUM_147ML:
    		return "Enum_147ml"		
        case SlotEquivalent_ENUM_187ML:
    		return "Enum_187ml"		
        case SlotEquivalent_ENUM_200ML:
    		return "Enum_200ml"		
        case SlotEquivalent_ENUM_250ML:
    		return "Enum_250ml"		
        case SlotEquivalent_ENUM_300ML:
    		return "Enum_300ml"		
        case SlotEquivalent_ENUM_330ML:
    		return "Enum_330ml"		
        case SlotEquivalent_ENUM_333ML:
    		return "Enum_333ml"		
        case SlotEquivalent_ENUM_341ML:
    		return "Enum_341ml"		
        case SlotEquivalent_ENUM_350ML:
    		return "Enum_350ml"		
        case SlotEquivalent_ENUM_355ML:
    		return "Enum_355ml"		
        case SlotEquivalent_ENUM_375ML:
    		return "Enum_375ml"		
        case SlotEquivalent_ENUM_376ML:
    		return "Enum_376ml"		
        case SlotEquivalent_ENUM_500ML:
    		return "Enum_500ml"		
        case SlotEquivalent_ENUM_620ML:
    		return "Enum_620ml"		
        case SlotEquivalent_ENUM_650ML:
    		return "Enum_650ml"		
        case SlotEquivalent_ENUM_680ML:
    		return "Enum_680ml"		
        case SlotEquivalent_ENUM_700ML:
    		return "Enum_700ml"		
        case SlotEquivalent_ENUM_720ML:
    		return "Enum_720ml"		
        case SlotEquivalent_ENUM_750ML:
    		return "Enum_750ml"		
        case SlotEquivalent_ENUM_751ML:
    		return "Enum_751ml"		
        case SlotEquivalent_ENUM_800ML:
    		return "Enum_800ml"		
        case SlotEquivalent_ENUM_1000ML:
    		return "Enum_1000ml"		
        case SlotEquivalent_ENUM_1500ML:
    		return "Enum_1500ml"		
        case SlotEquivalent_ENUM_1750ML:
    		return "Enum_1750ml"		
        case SlotEquivalent_ENUM_1800ML:
    		return "Enum_1800ml"		
        case SlotEquivalent_ENUM_1875ML:
    		return "Enum_1875ml"		
        case SlotEquivalent_ENUM_2000ML:
    		return "Enum_2000ml"		
        case SlotEquivalent_ENUM_3000ML:
    		return "Enum_3000ml"		
        case SlotEquivalent_ENUM_4500ML:
    		return "Enum_4500ml"		
        case SlotEquivalent_ENUM_5000ML:
    		return "Enum_5000ml"		
        case SlotEquivalent_ENUM_6000ML:
    		return "Enum_6000ml"		
        case SlotEquivalent_ENUM_9000ML:
    		return "Enum_9000ml"		
        case SlotEquivalent_ENUM_10000ML:
    		return "Enum_10000ml"		
        case SlotEquivalent_ENUM_12000ML:
    		return "Enum_12000ml"		
        case SlotEquivalent_ENUM_15000ML:
    		return "Enum_15000ml"		
        case SlotEquivalent_ENUM_18000ML:
    		return "Enum_18000ml"		
        case SlotEquivalent_ENUM_19500ML:
    		return "Enum_19500ml"		
        case SlotEquivalent_ENUM_20000ML:
    		return "Enum_20000ml"		
        case SlotEquivalent_ENUM_27000ML:
    		return "Enum_27000ml"		
        case SlotEquivalent_ENUM_50000ML:
    		return "Enum_50000ml"		
        case SlotEquivalent_ENUM_56000ML:
    		return "Enum_56000ml"		
        default:
        	return "Enum_0ml"
    }
}

/**
 * Converts SlotEquivalentEnum Array to its string Array representation
*/
func SlotEquivalentEnumArrayToValue(slotEquivalentEnum []SlotEquivalentEnum) []string {
    convArray := make([]string,len( slotEquivalentEnum))
    for i:=0; i<len(slotEquivalentEnum);i++ {
        convArray[i] = SlotEquivalentEnumToValue(slotEquivalentEnum[i])
    }
    return convArray
}


/**
 * Converts given value to its enum representation
 */
func SlotEquivalentEnumFromValue(value string) SlotEquivalentEnum {
    switch value {
        case "Enum_0ml":
            return SlotEquivalent_ENUM_0ML
        case "Enum_7ml":
            return SlotEquivalent_ENUM_7ML
        case "Enum_50ml":
            return SlotEquivalent_ENUM_50ML
        case "Enum_100ml":
            return SlotEquivalent_ENUM_100ML
        case "Enum_125ml":
            return SlotEquivalent_ENUM_125ML
        case "Enum_147ml":
            return SlotEquivalent_ENUM_147ML
        case "Enum_187ml":
            return SlotEquivalent_ENUM_187ML
        case "Enum_200ml":
            return SlotEquivalent_ENUM_200ML
        case "Enum_250ml":
            return SlotEquivalent_ENUM_250ML
        case "Enum_300ml":
            return SlotEquivalent_ENUM_300ML
        case "Enum_330ml":
            return SlotEquivalent_ENUM_330ML
        case "Enum_333ml":
            return SlotEquivalent_ENUM_333ML
        case "Enum_341ml":
            return SlotEquivalent_ENUM_341ML
        case "Enum_350ml":
            return SlotEquivalent_ENUM_350ML
        case "Enum_355ml":
            return SlotEquivalent_ENUM_355ML
        case "Enum_375ml":
            return SlotEquivalent_ENUM_375ML
        case "Enum_376ml":
            return SlotEquivalent_ENUM_376ML
        case "Enum_500ml":
            return SlotEquivalent_ENUM_500ML
        case "Enum_620ml":
            return SlotEquivalent_ENUM_620ML
        case "Enum_650ml":
            return SlotEquivalent_ENUM_650ML
        case "Enum_680ml":
            return SlotEquivalent_ENUM_680ML
        case "Enum_700ml":
            return SlotEquivalent_ENUM_700ML
        case "Enum_720ml":
            return SlotEquivalent_ENUM_720ML
        case "Enum_750ml":
            return SlotEquivalent_ENUM_750ML
        case "Enum_751ml":
            return SlotEquivalent_ENUM_751ML
        case "Enum_800ml":
            return SlotEquivalent_ENUM_800ML
        case "Enum_1000ml":
            return SlotEquivalent_ENUM_1000ML
        case "Enum_1500ml":
            return SlotEquivalent_ENUM_1500ML
        case "Enum_1750ml":
            return SlotEquivalent_ENUM_1750ML
        case "Enum_1800ml":
            return SlotEquivalent_ENUM_1800ML
        case "Enum_1875ml":
            return SlotEquivalent_ENUM_1875ML
        case "Enum_2000ml":
            return SlotEquivalent_ENUM_2000ML
        case "Enum_3000ml":
            return SlotEquivalent_ENUM_3000ML
        case "Enum_4500ml":
            return SlotEquivalent_ENUM_4500ML
        case "Enum_5000ml":
            return SlotEquivalent_ENUM_5000ML
        case "Enum_6000ml":
            return SlotEquivalent_ENUM_6000ML
        case "Enum_9000ml":
            return SlotEquivalent_ENUM_9000ML
        case "Enum_10000ml":
            return SlotEquivalent_ENUM_10000ML
        case "Enum_12000ml":
            return SlotEquivalent_ENUM_12000ML
        case "Enum_15000ml":
            return SlotEquivalent_ENUM_15000ML
        case "Enum_18000ml":
            return SlotEquivalent_ENUM_18000ML
        case "Enum_19500ml":
            return SlotEquivalent_ENUM_19500ML
        case "Enum_20000ml":
            return SlotEquivalent_ENUM_20000ML
        case "Enum_27000ml":
            return SlotEquivalent_ENUM_27000ML
        case "Enum_50000ml":
            return SlotEquivalent_ENUM_50000ML
        case "Enum_56000ml":
            return SlotEquivalent_ENUM_56000ML
        default:
            return SlotEquivalent_ENUM_0ML
    }
}
