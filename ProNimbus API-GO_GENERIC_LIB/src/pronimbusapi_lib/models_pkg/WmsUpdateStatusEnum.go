/*
 * pronimbusapi_lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

package models_pkg

import(
    "encoding/json"
)

/**
 * Type definition for WmsUpdateStatusEnum enum
 */
type WmsUpdateStatusEnum int

/**
 * Value collection for WmsUpdateStatusEnum enum
 */
const (
    WmsUpdateStatus_SUCCESS WmsUpdateStatusEnum = 1 + iota
    WmsUpdateStatus_FAILURE
)

func (r WmsUpdateStatusEnum) MarshalJSON() ([]byte, error) { 
    s := WmsUpdateStatusEnumToValue(r)
    return json.Marshal(s) 
} 

func (r *WmsUpdateStatusEnum) UnmarshalJSON(data []byte) error { 
    var s string 
    json.Unmarshal(data, &s)
    v :=  WmsUpdateStatusEnumFromValue(s)
    *r = v 
    return nil 
 } 


/**
 * Converts WmsUpdateStatusEnum to its string representation
 */
func WmsUpdateStatusEnumToValue(wmsUpdateStatusEnum WmsUpdateStatusEnum) string {
    switch wmsUpdateStatusEnum {
        case WmsUpdateStatus_SUCCESS:
    		return "success"		
        case WmsUpdateStatus_FAILURE:
    		return "failure"		
        default:
        	return "success"
    }
}

/**
 * Converts WmsUpdateStatusEnum Array to its string Array representation
*/
func WmsUpdateStatusEnumArrayToValue(wmsUpdateStatusEnum []WmsUpdateStatusEnum) []string {
    convArray := make([]string,len( wmsUpdateStatusEnum))
    for i:=0; i<len(wmsUpdateStatusEnum);i++ {
        convArray[i] = WmsUpdateStatusEnumToValue(wmsUpdateStatusEnum[i])
    }
    return convArray
}


/**
 * Converts given value to its enum representation
 */
func WmsUpdateStatusEnumFromValue(value string) WmsUpdateStatusEnum {
    switch value {
        case "success":
            return WmsUpdateStatus_SUCCESS
        case "failure":
            return WmsUpdateStatus_FAILURE
        default:
            return WmsUpdateStatus_SUCCESS
    }
}
