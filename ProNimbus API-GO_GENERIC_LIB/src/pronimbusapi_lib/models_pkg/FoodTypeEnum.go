/*
 * pronimbusapi_lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

package models_pkg

import(
    "encoding/json"
)

/**
 * Type definition for FoodTypeEnum enum
 */
type FoodTypeEnum int

/**
 * Value collection for FoodTypeEnum enum
 */
const (
    FoodType_BEVERAGE FoodTypeEnum = 1 + iota
    FoodType_CANNED
    FoodType_DAIRY
    FoodType_DESSERT
    FoodType_FRUIT
    FoodType_MEAT
    FoodType_PRODUCE
    FoodType_SEAFOOD
    FoodType_OTHER
)

func (r FoodTypeEnum) MarshalJSON() ([]byte, error) { 
    s := FoodTypeEnumToValue(r)
    return json.Marshal(s) 
} 

func (r *FoodTypeEnum) UnmarshalJSON(data []byte) error { 
    var s string 
    json.Unmarshal(data, &s)
    v :=  FoodTypeEnumFromValue(s)
    *r = v 
    return nil 
 } 


/**
 * Converts FoodTypeEnum to its string representation
 */
func FoodTypeEnumToValue(foodTypeEnum FoodTypeEnum) string {
    switch foodTypeEnum {
        case FoodType_BEVERAGE:
    		return "Beverage"		
        case FoodType_CANNED:
    		return "Canned"		
        case FoodType_DAIRY:
    		return "Dairy"		
        case FoodType_DESSERT:
    		return "Dessert"		
        case FoodType_FRUIT:
    		return "Fruit"		
        case FoodType_MEAT:
    		return "Meat"		
        case FoodType_PRODUCE:
    		return "Produce"		
        case FoodType_SEAFOOD:
    		return "Seafood"		
        case FoodType_OTHER:
    		return "Other"		
        default:
        	return "Beverage"
    }
}

/**
 * Converts FoodTypeEnum Array to its string Array representation
*/
func FoodTypeEnumArrayToValue(foodTypeEnum []FoodTypeEnum) []string {
    convArray := make([]string,len( foodTypeEnum))
    for i:=0; i<len(foodTypeEnum);i++ {
        convArray[i] = FoodTypeEnumToValue(foodTypeEnum[i])
    }
    return convArray
}


/**
 * Converts given value to its enum representation
 */
func FoodTypeEnumFromValue(value string) FoodTypeEnum {
    switch value {
        case "Beverage":
            return FoodType_BEVERAGE
        case "Canned":
            return FoodType_CANNED
        case "Dairy":
            return FoodType_DAIRY
        case "Dessert":
            return FoodType_DESSERT
        case "Fruit":
            return FoodType_FRUIT
        case "Meat":
            return FoodType_MEAT
        case "Produce":
            return FoodType_PRODUCE
        case "Seafood":
            return FoodType_SEAFOOD
        case "Other":
            return FoodType_OTHER
        default:
            return FoodType_BEVERAGE
    }
}
