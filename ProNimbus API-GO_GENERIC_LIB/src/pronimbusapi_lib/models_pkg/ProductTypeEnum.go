/*
 * pronimbusapi_lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

package models_pkg

import(
    "encoding/json"
)

/**
 * Type definition for ProductTypeEnum enum
 */
type ProductTypeEnum int

/**
 * Value collection for ProductTypeEnum enum
 */
const (
    ProductType_WINE ProductTypeEnum = 1 + iota
    ProductType_FOOD
    ProductType_MERCHANDISE
    ProductType_COLLATERAL
)

func (r ProductTypeEnum) MarshalJSON() ([]byte, error) { 
    s := ProductTypeEnumToValue(r)
    return json.Marshal(s) 
} 

func (r *ProductTypeEnum) UnmarshalJSON(data []byte) error { 
    var s string 
    json.Unmarshal(data, &s)
    v :=  ProductTypeEnumFromValue(s)
    *r = v 
    return nil 
 } 


/**
 * Converts ProductTypeEnum to its string representation
 */
func ProductTypeEnumToValue(productTypeEnum ProductTypeEnum) string {
    switch productTypeEnum {
        case ProductType_WINE:
    		return "Wine"		
        case ProductType_FOOD:
    		return "Food"		
        case ProductType_MERCHANDISE:
    		return "Merchandise"		
        case ProductType_COLLATERAL:
    		return "Collateral"		
        default:
        	return "Wine"
    }
}

/**
 * Converts ProductTypeEnum Array to its string Array representation
*/
func ProductTypeEnumArrayToValue(productTypeEnum []ProductTypeEnum) []string {
    convArray := make([]string,len( productTypeEnum))
    for i:=0; i<len(productTypeEnum);i++ {
        convArray[i] = ProductTypeEnumToValue(productTypeEnum[i])
    }
    return convArray
}


/**
 * Converts given value to its enum representation
 */
func ProductTypeEnumFromValue(value string) ProductTypeEnum {
    switch value {
        case "Wine":
            return ProductType_WINE
        case "Food":
            return ProductType_FOOD
        case "Merchandise":
            return ProductType_MERCHANDISE
        case "Collateral":
            return ProductType_COLLATERAL
        default:
            return ProductType_WINE
    }
}
