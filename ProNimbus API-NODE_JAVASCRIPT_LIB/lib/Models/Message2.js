/**
 * ProNimbusAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of Message2
 */
class Message2 extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.orderID = this.constructor.getValue(obj.orderID);
        this.toName = this.constructor.getValue(obj.toName);
        this.toEmail = this.constructor.getValue(obj.toEmail);
        this.fromName = this.constructor.getValue(obj.fromName);
        this.fromEmail = this.constructor.getValue(obj.fromEmail);
        this.timeSent = this.constructor.getValue(obj.timeSent);
        this.messageType = this.constructor.getValue(obj.messageType);
        this.subject = this.constructor.getValue(obj.subject);
        this.body = this.constructor.getValue(obj.body);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'orderID', realName: 'orderID' },
            { name: 'toName', realName: 'toName' },
            { name: 'toEmail', realName: 'toEmail' },
            { name: 'fromName', realName: 'fromName' },
            { name: 'fromEmail', realName: 'fromEmail' },
            { name: 'timeSent', realName: 'timeSent', isDateTime: true, dateTimeValue: 'rfc3339' },
            { name: 'messageType', realName: 'messageType' },
            { name: 'subject', realName: 'subject' },
            { name: 'body', realName: 'body' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = Message2;
