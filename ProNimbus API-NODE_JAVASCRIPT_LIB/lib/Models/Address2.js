/**
 * ProNimbusAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of Address2
 */
class Address2 extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.recipientFirstName = this.constructor.getValue(obj.recipientFirstName);
        this.recipientMiddleName = this.constructor.getValue(obj.recipientMiddleName);
        this.recipientLastName = this.constructor.getValue(obj.recipientLastName);
        this.company = this.constructor.getValue(obj.company);
        this.address1 = this.constructor.getValue(obj.address1);
        this.address2 = this.constructor.getValue(obj.address2);
        this.city = this.constructor.getValue(obj.city);
        this.state = this.constructor.getValue(obj.state);
        this.country = this.constructor.getValue(obj.country);
        this.zipCode = this.constructor.getValue(obj.zipCode);
        this.email = this.constructor.getValue(obj.email);
        this.workPhone = this.constructor.getValue(obj.workPhone);
        this.homePhone = this.constructor.getValue(obj.homePhone);
        this.mobilePhone = this.constructor.getValue(obj.mobilePhone);
        this.dob = this.constructor.getValue(obj.dob);
        this.billRecipientFirstName = this.constructor.getValue(obj.billRecipientFirstName);
        this.billRecipientMiddleName = this.constructor.getValue(obj.billRecipientMiddleName);
        this.billRecipientLastName = this.constructor.getValue(obj.billRecipientLastName);
        this.billCompany = this.constructor.getValue(obj.billCompany);
        this.billAddress1 = this.constructor.getValue(obj.billAddress1);
        this.billAddress2 = this.constructor.getValue(obj.billAddress2);
        this.billCity = this.constructor.getValue(obj.billCity);
        this.billState = this.constructor.getValue(obj.billState);
        this.billCountry = this.constructor.getValue(obj.billCountry);
        this.billZipCode = this.constructor.getValue(obj.billZipCode);
        this.billEmail = this.constructor.getValue(obj.billEmail);
        this.billWorkPhone = this.constructor.getValue(obj.billWorkPhone);
        this.billHomePhone = this.constructor.getValue(obj.billHomePhone);
        this.billMobilePhone = this.constructor.getValue(obj.billMobilePhone);
        this.billDob = this.constructor.getValue(obj.billDob);
        this.altLocationType = this.constructor.getValue(obj.altLocationType);
        this.altFirstName = this.constructor.getValue(obj.altFirstName);
        this.altLastName = this.constructor.getValue(obj.altLastName);
        this.altCompany = this.constructor.getValue(obj.altCompany);
        this.altAddress1 = this.constructor.getValue(obj.altAddress1);
        this.altAddress2 = this.constructor.getValue(obj.altAddress2);
        this.altCity = this.constructor.getValue(obj.altCity);
        this.altState = this.constructor.getValue(obj.altState);
        this.altZipCode = this.constructor.getValue(obj.altZipCode);
        this.altCountry = this.constructor.getValue(obj.altCountry);
        this.altPhone = this.constructor.getValue(obj.altPhone);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'recipientFirstName', realName: 'recipientFirstName' },
            { name: 'recipientMiddleName', realName: 'recipientMiddleName' },
            { name: 'recipientLastName', realName: 'recipientLastName' },
            { name: 'company', realName: 'company' },
            { name: 'address1', realName: 'address1' },
            { name: 'address2', realName: 'address2' },
            { name: 'city', realName: 'city' },
            { name: 'state', realName: 'state' },
            { name: 'country', realName: 'country' },
            { name: 'zipCode', realName: 'zipCode' },
            { name: 'email', realName: 'email' },
            { name: 'workPhone', realName: 'workPhone' },
            { name: 'homePhone', realName: 'homePhone' },
            { name: 'mobilePhone', realName: 'mobilePhone' },
            { name: 'dob', realName: 'dob' },
            { name: 'billRecipientFirstName', realName: 'billRecipientFirstName' },
            { name: 'billRecipientMiddleName', realName: 'billRecipientMiddleName' },
            { name: 'billRecipientLastName', realName: 'billRecipientLastName' },
            { name: 'billCompany', realName: 'billCompany' },
            { name: 'billAddress1', realName: 'billAddress1' },
            { name: 'billAddress2', realName: 'billAddress2' },
            { name: 'billCity', realName: 'billCity' },
            { name: 'billState', realName: 'billState' },
            { name: 'billCountry', realName: 'billCountry' },
            { name: 'billZipCode', realName: 'billZipCode' },
            { name: 'billEmail', realName: 'billEmail' },
            { name: 'billWorkPhone', realName: 'billWorkPhone' },
            { name: 'billHomePhone', realName: 'billHomePhone' },
            { name: 'billMobilePhone', realName: 'billMobilePhone' },
            { name: 'billDob', realName: 'billDob' },
            { name: 'altLocationType', realName: 'altLocationType' },
            { name: 'altFirstName', realName: 'altFirstName' },
            { name: 'altLastName', realName: 'altLastName' },
            { name: 'altCompany', realName: 'altCompany' },
            { name: 'altAddress1', realName: 'altAddress1' },
            { name: 'altAddress2', realName: 'altAddress2' },
            { name: 'altCity', realName: 'altCity' },
            { name: 'altState', realName: 'altState' },
            { name: 'altZipCode', realName: 'altZipCode' },
            { name: 'altCountry', realName: 'altCountry' },
            { name: 'altPhone', realName: 'altPhone' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = Address2;
