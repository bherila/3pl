/**
 * ProNimbusAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of ProductDetailsItem
 */
class ProductDetailsItem extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.productSku = this.constructor.getValue(obj.productSku);
        this.productType = this.constructor.getValue(obj.productType);
        this.productName = this.constructor.getValue(obj.productName);
        this.brandCode = this.constructor.getValue(obj.brandCode);
        this.vintage = this.constructor.getValue(obj.vintage);
        this.pending = this.constructor.getValue(obj.pending);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'productSku', realName: 'productSku' },
            { name: 'productType', realName: 'productType' },
            { name: 'productName', realName: 'productName' },
            { name: 'brandCode', realName: 'brandCode' },
            { name: 'vintage', realName: 'vintage' },
            { name: 'pending', realName: 'pending' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = ProductDetailsItem;
