/**
 * ProNimbusAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const APIException = require('./APIException');

/**
 * Creates an instance of ProductDetailsErrorResponseException
 */
class ProductDetailsErrorResponseException extends APIException {
    /**
     * @constructor
     */
    constructor() {
        super();
        /**
         * A numeric representation of the status of the call. Values possible in a unsuccessful
         * response are
         * * `1` - Unknown error in the ProNimbus code
         * * `3` - No matching products were found
         * * `4` - clientCode does not exist
         */
        this.code = null;

        /**
         * A string representation of the status of the call. Values possible in a unsuccessful
         * response are
         * * Unknown error: *error message*
         * * No matching products were found
         * * clientCode='*clientCode*' does not exist
         */
        this.message = null;

        /**
         * An empty object. No results are returned as part of a status 400 result.
         */
        this.result = null;

        /**
         * An object describing the fields in the request that are in error. May contain multiple
         * levels if the fields in error are part of a field that is an object. If there is no error
         * this object is empty.
         */
        this.errors = null;
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'code', realName: 'code' },
            { name: 'message', realName: 'message' },
            { name: 'result', realName: 'result' },
            { name: 'errors', realName: 'errors' },
        ]);
    }
}

module.exports = ProductDetailsErrorResponseException;
