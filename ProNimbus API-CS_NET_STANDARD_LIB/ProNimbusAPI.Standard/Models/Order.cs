/*
 * ProNimbusAPI.Standard
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using ProNimbusAPI.Standard;
using ProNimbusAPI.Standard.Utilities;


namespace ProNimbusAPI.Standard.Models
{
    public class Order : BaseModel 
    {
        // These fields hold the values for the public properties.
        private string orderNo;
        private Models.OrderTypeEnum? orderType = Models.OrderTypeEnum.ENUM_NA;
        private string brandCode;
        private string subClub;
        private string orderDate;
        private Models.ShipMethodEnum? shipMethod;
        private Models.FulfillmentTypeEnum fulfillmentType;
        private string fulfillmentLocation;
        private string manifestLocation;
        private string transferDestination;
        private string requestedShipDate;
        private Models.ShippingAddress shipToAddress;
        private Models.Address billToAddress;
        private Models.PickupAddress altPickupAddress;
        private string onHoldMessage;
        private string specialInstructions;
        private string doNotReconfigure;
        private string licenseType;
        private Models.GiftEnum? gift = Models.GiftEnum.N;
        private string giftMessage;
        private string orderNo3P;
        private double? shippingTotal;
        private double? freightTax;
        private object additionalFields;
        private List<Models.OrderItem> orderItems;

        /// <summary>
        /// Customer order number.
        /// </summary>
        [JsonProperty("orderNo")]
        public string OrderNo 
        { 
            get 
            {
                return this.orderNo; 
            } 
            set 
            {
                this.orderNo = value;
                onPropertyChanged("OrderNo");
            }
        }

        /// <summary>
        /// Optional, overrides the default orderType of "N/A"
        /// </summary>
        [JsonProperty("orderType", ItemConverterType = typeof(StringValuedEnumConverter))]
        public Models.OrderTypeEnum? OrderType 
        { 
            get 
            {
                return this.orderType; 
            } 
            set 
            {
                this.orderType = value;
                onPropertyChanged("OrderType");
            }
        }

        /// <summary>
        /// A brand code associated with one of the client's brands
        /// </summary>
        [JsonProperty("brandCode")]
        public string BrandCode 
        { 
            get 
            {
                return this.brandCode; 
            } 
            set 
            {
                this.brandCode = value;
                onPropertyChanged("BrandCode");
            }
        }

        /// <summary>
        /// Legacy for backward compatibility; ignore
        /// </summary>
        [JsonProperty("subClub")]
        public string SubClub 
        { 
            get 
            {
                return this.subClub; 
            } 
            set 
            {
                this.subClub = value;
                onPropertyChanged("SubClub");
            }
        }

        /// <summary>
        /// A date string, YYYY-MM-DD. If left blank, defaults to the current date.
        /// </summary>
        [JsonProperty("orderDate")]
        public string OrderDate 
        { 
            get 
            {
                return this.orderDate; 
            } 
            set 
            {
                this.orderDate = value;
                onPropertyChanged("OrderDate");
            }
        }

        /// <summary>
        /// Optional, overrides the default carrier for this client and destination state. The provided shipMethod must exist in a valid route. Valid Values are
        ///   * `UP2` - UPS 2nd Day Air
        ///   * `UP3` - UPS 3 Day Select
        ///   * `UPS` - UPS Ground
        ///   * `UP1` - UPS Next Day Air
        ///   * `UPS7` - UPS Next Day Air Saver
        ///   * `FEX` - FedEx 2Day
        ///   * `FXE` - FedEx Express Saver
        ///   * `FXG` - FedEx Ground
        ///   * `FEH` - FedEx Home Delivery
        ///   * `FXP` - FedEx Priority Overnight
        ///   * `FXO` - FedEx Standard Overnight
        ///   * `GSC` - GSO Ground
        ///   * `GSP` - GSO Priority
        ///   * `GSO3` - GSO Pallet Service
        ///   * `WCP` - Will Call Packed
        ///   * `WCU` - Will Call Unpacked
        ///   * `WCX` - Will Call Extra
        ///   * `UDS` - UnitedDelivery Service Ground
        ///   * `AZS` - Wine 2 U Arizona Shipper
        ///   * `Transfer` - Stock Transfer orders
        /// </summary>
        [JsonProperty("shipMethod", ItemConverterType = typeof(StringValuedEnumConverter))]
        public Models.ShipMethodEnum? ShipMethod 
        { 
            get 
            {
                return this.shipMethod; 
            } 
            set 
            {
                this.shipMethod = value;
                onPropertyChanged("ShipMethod");
            }
        }

        /// <summary>
        /// The fulfillment type for this order. The provided fulfillmentType must exist in a valid route.
        /// </summary>
        [JsonProperty("fulfillmentType", ItemConverterType = typeof(StringValuedEnumConverter))]
        public Models.FulfillmentTypeEnum FulfillmentType 
        { 
            get 
            {
                return this.fulfillmentType; 
            } 
            set 
            {
                this.fulfillmentType = value;
                onPropertyChanged("FulfillmentType");
            }
        }

        /// <summary>
        /// A code that defines a facility.
        /// </summary>
        [JsonProperty("fulfillmentLocation")]
        public string FulfillmentLocation 
        { 
            get 
            {
                return this.fulfillmentLocation; 
            } 
            set 
            {
                this.fulfillmentLocation = value;
                onPropertyChanged("FulfillmentLocation");
            }
        }

        /// <summary>
        /// A code that defines a facility.
        /// </summary>
        [JsonProperty("manifestLocation")]
        public string ManifestLocation 
        { 
            get 
            {
                return this.manifestLocation; 
            } 
            set 
            {
                this.manifestLocation = value;
                onPropertyChanged("ManifestLocation");
            }
        }

        /// <summary>
        /// A code that defines a facility. This field is only valid when `fulfillmentType` is `Transfer`; for all other fulfillment types it is ignored. When it *is* specified, the `shipToAddress` block may be omitted.
        /// </summary>
        [JsonProperty("transferDestination")]
        public string TransferDestination 
        { 
            get 
            {
                return this.transferDestination; 
            } 
            set 
            {
                this.transferDestination = value;
                onPropertyChanged("TransferDestination");
            }
        }

        /// <summary>
        /// A date string, YYYY-MM-DD. If left blank, defaults to the current date.
        /// </summary>
        [JsonProperty("requestedShipDate")]
        public string RequestedShipDate 
        { 
            get 
            {
                return this.requestedShipDate; 
            } 
            set 
            {
                this.requestedShipDate = value;
                onPropertyChanged("RequestedShipDate");
            }
        }

        /// <summary>
        /// TODO: Write general description for this method
        /// </summary>
        [JsonProperty("shipToAddress")]
        public Models.ShippingAddress ShipToAddress 
        { 
            get 
            {
                return this.shipToAddress; 
            } 
            set 
            {
                this.shipToAddress = value;
                onPropertyChanged("ShipToAddress");
            }
        }

        /// <summary>
        /// TODO: Write general description for this method
        /// </summary>
        [JsonProperty("billToAddress")]
        public Models.Address BillToAddress 
        { 
            get 
            {
                return this.billToAddress; 
            } 
            set 
            {
                this.billToAddress = value;
                onPropertyChanged("BillToAddress");
            }
        }

        /// <summary>
        /// TODO: Write general description for this method
        /// </summary>
        [JsonProperty("altPickupAddress")]
        public Models.PickupAddress AltPickupAddress 
        { 
            get 
            {
                return this.altPickupAddress; 
            } 
            set 
            {
                this.altPickupAddress = value;
                onPropertyChanged("AltPickupAddress");
            }
        }

        /// <summary>
        /// Special instructions to the warehouse as to when to ship the order; flags order for review by CSR.
        /// </summary>
        [JsonProperty("onHoldMessage")]
        public string OnHoldMessage 
        { 
            get 
            {
                return this.onHoldMessage; 
            } 
            set 
            {
                this.onHoldMessage = value;
                onPropertyChanged("OnHoldMessage");
            }
        }

        /// <summary>
        /// Special instructions to the warehouse (e.g. include ice packs, etc.); flags order for review by CSR.
        /// </summary>
        [JsonProperty("specialInstructions")]
        public string SpecialInstructions 
        { 
            get 
            {
                return this.specialInstructions; 
            } 
            set 
            {
                this.specialInstructions = value;
                onPropertyChanged("SpecialInstructions");
            }
        }

        /// <summary>
        /// Deprecated, do not use.
        /// </summary>
        [JsonProperty("doNotReconfigure")]
        public string DoNotReconfigure 
        { 
            get 
            {
                return this.doNotReconfigure; 
            } 
            set 
            {
                this.doNotReconfigure = value;
                onPropertyChanged("DoNotReconfigure");
            }
        }

        /// <summary>
        /// Deprecated, do not use.
        /// </summary>
        [JsonProperty("licenseType")]
        public string LicenseType 
        { 
            get 
            {
                return this.licenseType; 
            } 
            set 
            {
                this.licenseType = value;
                onPropertyChanged("LicenseType");
            }
        }

        /// <summary>
        /// Optional; required for legacy compatibility
        /// </summary>
        [JsonProperty("gift", ItemConverterType = typeof(StringValuedEnumConverter))]
        public Models.GiftEnum? Gift 
        { 
            get 
            {
                return this.gift; 
            } 
            set 
            {
                this.gift = value;
                onPropertyChanged("Gift");
            }
        }

        /// <summary>
        /// Optional gift message printed on the shipping label. If not provided, defaults to null. Disregarded if gift not "Y"
        /// </summary>
        [JsonProperty("giftMessage")]
        public string GiftMessage 
        { 
            get 
            {
                return this.giftMessage; 
            } 
            set 
            {
                this.giftMessage = value;
                onPropertyChanged("GiftMessage");
            }
        }

        /// <summary>
        /// Optional. 3rd party order number, often times used when 3rd party applications may apply their own numbering system to the order.
        /// </summary>
        [JsonProperty("orderNo3P")]
        public string OrderNo3P 
        { 
            get 
            {
                return this.orderNo3P; 
            } 
            set 
            {
                this.orderNo3P = value;
                onPropertyChanged("OrderNo3P");
            }
        }

        /// <summary>
        /// Optional. Calculated shipping total for the order; used for compliance.
        /// </summary>
        [JsonProperty("shippingTotal")]
        public double? ShippingTotal 
        { 
            get 
            {
                return this.shippingTotal; 
            } 
            set 
            {
                this.shippingTotal = value;
                onPropertyChanged("ShippingTotal");
            }
        }

        /// <summary>
        /// Optional. Applicable shipping tax for the order; should be calculated based on the state and product being shipped.
        /// </summary>
        [JsonProperty("freightTax")]
        public double? FreightTax 
        { 
            get 
            {
                return this.freightTax; 
            } 
            set 
            {
                this.freightTax = value;
                onPropertyChanged("FreightTax");
            }
        }

        /// <summary>
        /// A JSON object with arbitrary fields. This is used to communicate special values for custom branded picksheets; the contents of this field are unvalidated by ProNimbus and will be ignored if they do not conform to the requirements of the branded picksheet corresponding to the brand indicated in the "brandCode" field.
        /// </summary>
        [JsonProperty("additionalFields")]
        public object AdditionalFields 
        { 
            get 
            {
                return this.additionalFields; 
            } 
            set 
            {
                this.additionalFields = value;
                onPropertyChanged("AdditionalFields");
            }
        }

        /// <summary>
        /// An array of order item objects.
        /// </summary>
        [JsonProperty("orderItems")]
        public List<Models.OrderItem> OrderItems 
        { 
            get 
            {
                return this.orderItems; 
            } 
            set 
            {
                this.orderItems = value;
                onPropertyChanged("OrderItems");
            }
        }
    }
} 