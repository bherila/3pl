/*
 * ProNimbusAPI.Standard
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using ProNimbusAPI.Standard;
using ProNimbusAPI.Standard.Utilities;


namespace ProNimbusAPI.Standard.Models
{
    public class OrderStatusItem : BaseModel 
    {
        // These fields hold the values for the public properties.
        private string specialInstructions;
        private Models.Address2 address;
        private List<Models.OrderItem1> orderItems;
        private List<Models.DeficientSku> deficientSkus;
        private string orderNo;
        private string statusCode;
        private string statusMessage;
        private string carrierId;
        private Models.FulfillmentTypeEnum? fulfillmentType;
        private string shipDate;
        private string orderTrackingURL;
        private Models.OnHoldEnum? onHold;
        private List<Models.ParcelStatus> parcels;

        /// <summary>
        /// Any special instructions for the order that may exist, including whether an order is on hold. This field may be blank. Only returned when the request object's detailView is set to 1.
        /// </summary>
        [JsonProperty("specialInstructions")]
        public string SpecialInstructions 
        { 
            get 
            {
                return this.specialInstructions; 
            } 
            set 
            {
                this.specialInstructions = value;
                onPropertyChanged("SpecialInstructions");
            }
        }

        /// <summary>
        /// The address for the order. Only returned when the request object's detailView is set to 1.
        /// </summary>
        [JsonProperty("address")]
        public Models.Address2 Address 
        { 
            get 
            {
                return this.address; 
            } 
            set 
            {
                this.address = value;
                onPropertyChanged("Address");
            }
        }

        /// <summary>
        /// The address for the order. Only returned when the request object's detailView is set to 1.
        /// </summary>
        [JsonProperty("orderItems")]
        public List<Models.OrderItem1> OrderItems 
        { 
            get 
            {
                return this.orderItems; 
            } 
            set 
            {
                this.orderItems = value;
                onPropertyChanged("OrderItems");
            }
        }

        /// <summary>
        /// Items in the order for which there is insufficient inventory.
        /// </summary>
        [JsonProperty("deficientSkus")]
        public List<Models.DeficientSku> DeficientSkus 
        { 
            get 
            {
                return this.deficientSkus; 
            } 
            set 
            {
                this.deficientSkus = value;
                onPropertyChanged("DeficientSkus");
            }
        }

        /// <summary>
        /// Customer order number.
        /// </summary>
        [JsonProperty("orderNo")]
        public string OrderNo 
        { 
            get 
            {
                return this.orderNo; 
            } 
            set 
            {
                this.orderNo = value;
                onPropertyChanged("OrderNo");
            }
        }

        /// <summary>
        /// TODO: Write general description for this method
        /// </summary>
        [JsonProperty("statusCode")]
        public string StatusCode 
        { 
            get 
            {
                return this.statusCode; 
            } 
            set 
            {
                this.statusCode = value;
                onPropertyChanged("StatusCode");
            }
        }

        /// <summary>
        /// TODO: Write general description for this method
        /// </summary>
        [JsonProperty("statusMessage")]
        public string StatusMessage 
        { 
            get 
            {
                return this.statusMessage; 
            } 
            set 
            {
                this.statusMessage = value;
                onPropertyChanged("StatusMessage");
            }
        }

        /// <summary>
        /// TODO: Write general description for this method
        /// </summary>
        [JsonProperty("carrierId")]
        public string CarrierId 
        { 
            get 
            {
                return this.carrierId; 
            } 
            set 
            {
                this.carrierId = value;
                onPropertyChanged("CarrierId");
            }
        }

        /// <summary>
        /// The fulfillment type for this order. The provided fulfillmentType must exist in a valid route.
        /// </summary>
        [JsonProperty("fulfillmentType", ItemConverterType = typeof(StringValuedEnumConverter))]
        public Models.FulfillmentTypeEnum? FulfillmentType 
        { 
            get 
            {
                return this.fulfillmentType; 
            } 
            set 
            {
                this.fulfillmentType = value;
                onPropertyChanged("FulfillmentType");
            }
        }

        /// <summary>
        /// A date string, YYYY-MM-DD. If left blank, defaults to the current date.
        /// </summary>
        [JsonProperty("shipDate")]
        public string ShipDate 
        { 
            get 
            {
                return this.shipDate; 
            } 
            set 
            {
                this.shipDate = value;
                onPropertyChanged("ShipDate");
            }
        }

        /// <summary>
        /// URL to use in retrieving tracking information for the order.
        /// </summary>
        [JsonProperty("orderTrackingURL")]
        public string OrderTrackingURL 
        { 
            get 
            {
                return this.orderTrackingURL; 
            } 
            set 
            {
                this.orderTrackingURL = value;
                onPropertyChanged("OrderTrackingURL");
            }
        }

        /// <summary>
        /// Whether or not the order is on hold.
        /// </summary>
        [JsonProperty("onHold")]
        public Models.OnHoldEnum? OnHold 
        { 
            get 
            {
                return this.onHold; 
            } 
            set 
            {
                this.onHold = value;
                onPropertyChanged("OnHold");
            }
        }

        /// <summary>
        /// TODO: Write general description for this method
        /// </summary>
        [JsonProperty("parcels")]
        public List<Models.ParcelStatus> Parcels 
        { 
            get 
            {
                return this.parcels; 
            } 
            set 
            {
                this.parcels = value;
                onPropertyChanged("Parcels");
            }
        }
    }
} 