/*
 * ProNimbusAPI.Standard
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using ProNimbusAPI.Standard;
using ProNimbusAPI.Standard.Utilities;


namespace ProNimbusAPI.Standard.Models
{
    public class OrderItem : BaseModel 
    {
        // These fields hold the values for the public properties.
        private string productSKU;
        private int quantity;
        private string productSupplier;
        private string productName;
        private string tax;
        private string price;
        private string pctAlcohol;
        private double? weight;

        /// <summary>
        /// Unique identifier for an item.
        /// </summary>
        [JsonProperty("productSKU")]
        public string ProductSKU 
        { 
            get 
            {
                return this.productSKU; 
            } 
            set 
            {
                this.productSKU = value;
                onPropertyChanged("ProductSKU");
            }
        }

        /// <summary>
        /// An integer value greater than or equal to 0.
        /// </summary>
        [JsonProperty("quantity")]
        public int Quantity 
        { 
            get 
            {
                return this.quantity; 
            } 
            set 
            {
                this.quantity = value;
                onPropertyChanged("Quantity");
            }
        }

        /// <summary>
        /// If a product is supplied by a different client than the master client specified by the `clientCode` in the order, this field **must** be specified. If the value does not match the `clientCode` of a known client in the system, the order will be rejected by the API. If the value matches a known client but that client is not a supplier for the master client, the order will be accepted but marked invalid with an "Invalid Supplier" error.
        /// </summary>
        [JsonProperty("productSupplier")]
        public string ProductSupplier 
        { 
            get 
            {
                return this.productSupplier; 
            } 
            set 
            {
                this.productSupplier = value;
                onPropertyChanged("ProductSupplier");
            }
        }

        /// <summary>
        /// Name of the product. If omitted, the product name defined for the SKU in ProNimbus will be used. **This field is deprecated.**
        /// </summary>
        [JsonProperty("productName")]
        public string ProductName 
        { 
            get 
            {
                return this.productName; 
            } 
            set 
            {
                this.productName = value;
                onPropertyChanged("ProductName");
            }
        }

        /// <summary>
        /// For backward compatibility; **deprecated**
        /// </summary>
        [JsonProperty("tax")]
        public string Tax 
        { 
            get 
            {
                return this.tax; 
            } 
            set 
            {
                this.tax = value;
                onPropertyChanged("Tax");
            }
        }

        /// <summary>
        /// For backward compatibility; **deprecated**
        /// </summary>
        [JsonProperty("price")]
        public string Price 
        { 
            get 
            {
                return this.price; 
            } 
            set 
            {
                this.price = value;
                onPropertyChanged("Price");
            }
        }

        /// <summary>
        /// For backward compatibility; **deprecated**
        /// </summary>
        [JsonProperty("pctAlcohol")]
        public string PctAlcohol 
        { 
            get 
            {
                return this.pctAlcohol; 
            } 
            set 
            {
                this.pctAlcohol = value;
                onPropertyChanged("PctAlcohol");
            }
        }

        /// <summary>
        /// For backward compatibility; **deprecated**
        /// </summary>
        [JsonProperty("weight")]
        public double? Weight 
        { 
            get 
            {
                return this.weight; 
            } 
            set 
            {
                this.weight = value;
                onPropertyChanged("Weight");
            }
        }
    }
} 