/*
 * ProNimbusAPI.Standard
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using ProNimbusAPI.Standard;
using ProNimbusAPI.Standard.Utilities;


namespace ProNimbusAPI.Standard.Models
{
    public class Results4 : BaseModel 
    {
        // These fields hold the values for the public properties.
        private string scannerId;
        private string ulCode;
        private string containerId;
        private long? parcelId;
        private double? expectedWeight;
        private double? weight;
        private Models.Units1Enum? units;
        private string tolerance;
        private Models.RouteDirectionEnum? routeDirection;

        /// <summary>
        /// The ID of the scale performing the validation.
        /// </summary>
        [JsonProperty("scanner_id")]
        public string ScannerId 
        { 
            get 
            {
                return this.scannerId; 
            } 
            set 
            {
                this.scannerId = value;
                onPropertyChanged("ScannerId");
            }
        }

        /// <summary>
        /// The tote ID of the parcel being validated.
        /// </summary>
        [JsonProperty("ul_code")]
        public string UlCode 
        { 
            get 
            {
                return this.ulCode; 
            } 
            set 
            {
                this.ulCode = value;
                onPropertyChanged("UlCode");
            }
        }

        /// <summary>
        /// A synonym for `ul_code`. The tote ID of the parcel being validated.
        /// </summary>
        [JsonProperty("container_id")]
        public string ContainerId 
        { 
            get 
            {
                return this.containerId; 
            } 
            set 
            {
                this.containerId = value;
                onPropertyChanged("ContainerId");
            }
        }

        /// <summary>
        /// The internal parcel ID of the parcel being validated.
        /// </summary>
        [JsonProperty("parcel_id")]
        public long? ParcelId 
        { 
            get 
            {
                return this.parcelId; 
            } 
            set 
            {
                this.parcelId = value;
                onPropertyChanged("ParcelId");
            }
        }

        /// <summary>
        /// The expected weight for the parcel.
        /// </summary>
        [JsonProperty("expected_weight")]
        public double? ExpectedWeight 
        { 
            get 
            {
                return this.expectedWeight; 
            } 
            set 
            {
                this.expectedWeight = value;
                onPropertyChanged("ExpectedWeight");
            }
        }

        /// <summary>
        /// The weight that was passed into the validation call.
        /// </summary>
        [JsonProperty("weight")]
        public double? Weight 
        { 
            get 
            {
                return this.weight; 
            } 
            set 
            {
                this.weight = value;
                onPropertyChanged("Weight");
            }
        }

        /// <summary>
        /// For future expansion. Currently, only weights in pounds are supported.
        /// </summary>
        [JsonProperty("units", ItemConverterType = typeof(StringValuedEnumConverter))]
        public Models.Units1Enum? Units 
        { 
            get 
            {
                return this.units; 
            } 
            set 
            {
                this.units = value;
                onPropertyChanged("Units");
            }
        }

        /// <summary>
        /// The tolerance that was used to pass/fail the parcel, in `+NN.NN/-NN.NN` format.
        /// </summary>
        [JsonProperty("tolerance")]
        public string Tolerance 
        { 
            get 
            {
                return this.tolerance; 
            } 
            set 
            {
                this.tolerance = value;
                onPropertyChanged("Tolerance");
            }
        }

        /// <summary>
        /// What an automated scale should do with the parcel
        /// * `pass` - Send the parcel along the normal line
        /// * `reject` - Divert the parcel to a rejection line
        /// * `stop` - Stop the flow of parcels
        /// </summary>
        [JsonProperty("route_direction", ItemConverterType = typeof(StringValuedEnumConverter))]
        public Models.RouteDirectionEnum? RouteDirection 
        { 
            get 
            {
                return this.routeDirection; 
            } 
            set 
            {
                this.routeDirection = value;
                onPropertyChanged("RouteDirection");
            }
        }
    }
} 