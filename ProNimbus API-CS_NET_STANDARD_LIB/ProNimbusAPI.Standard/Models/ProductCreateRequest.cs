/*
 * ProNimbusAPI.Standard
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using ProNimbusAPI.Standard;
using ProNimbusAPI.Standard.Utilities;


namespace ProNimbusAPI.Standard.Models
{
    [JsonConverter(typeof(ProductCreateRequestCreationConverter))]
    public class ProductCreateRequest : BaseModel 
    {
        // These fields hold the values for the public properties.
        private string clientCode;
        private string productSku;
        private string productType;
        private string container;
        private int amountPerContainer;
        private string productName;
        private string shortDescription;
        private string longDescription;
        private string labelDescription;
        private string brandCode;
        private string retailPrice = "0.00";
        private Models.BackorderWarningEnum? backorderWarning = Models.BackorderWarningEnum.N;
        private int? backorderThreshold;
        private string serviceFee = "0.00";
        private double weight = 0;
        private Models.SlotEquivalentEnum slotEquivalent;
        private double slotCount = 1;

        /// <summary>
        /// Unique client identifier
        /// </summary>
        [JsonProperty("clientCode")]
        public string ClientCode 
        { 
            get 
            {
                return this.clientCode; 
            } 
            set 
            {
                this.clientCode = value;
                onPropertyChanged("ClientCode");
            }
        }

        /// <summary>
        /// Unique identifier for an item.
        /// </summary>
        [JsonProperty("productSku")]
        public string ProductSku 
        { 
            get 
            {
                return this.productSku; 
            } 
            set 
            {
                this.productSku = value;
                onPropertyChanged("ProductSku");
            }
        }

        /// <summary>
        /// TODO: Write general description for this method
        /// </summary>
        [JsonProperty("productType")]
        public string ProductType 
        { 
            get 
            {
                return this.productType; 
            } 
            set 
            {
                this.productType = value;
                onPropertyChanged("ProductType");
            }
        }

        /// <summary>
        /// The container type for this SKU, will determine how SKU is handled by the warehouse.
        /// </summary>
        [JsonProperty("container")]
        public string Container 
        { 
            get 
            {
                return this.container; 
            } 
            set 
            {
                this.container = value;
                onPropertyChanged("Container");
            }
        }

        /// <summary>
        /// An integer value greater than or equal to 0.
        /// </summary>
        [JsonProperty("amountPerContainer")]
        public int AmountPerContainer 
        { 
            get 
            {
                return this.amountPerContainer; 
            } 
            set 
            {
                this.amountPerContainer = value;
                onPropertyChanged("AmountPerContainer");
            }
        }

        /// <summary>
        /// Name of the product.
        /// </summary>
        [JsonProperty("productName")]
        public string ProductName 
        { 
            get 
            {
                return this.productName; 
            } 
            set 
            {
                this.productName = value;
                onPropertyChanged("ProductName");
            }
        }

        /// <summary>
        /// Short description of the product.
        /// </summary>
        [JsonProperty("shortDescription")]
        public string ShortDescription 
        { 
            get 
            {
                return this.shortDescription; 
            } 
            set 
            {
                this.shortDescription = value;
                onPropertyChanged("ShortDescription");
            }
        }

        /// <summary>
        /// Long description of the product.
        /// </summary>
        [JsonProperty("longDescription")]
        public string LongDescription 
        { 
            get 
            {
                return this.longDescription; 
            } 
            set 
            {
                this.longDescription = value;
                onPropertyChanged("LongDescription");
            }
        }

        /// <summary>
        /// Label description for the product
        /// </summary>
        [JsonProperty("labelDescription")]
        public string LabelDescription 
        { 
            get 
            {
                return this.labelDescription; 
            } 
            set 
            {
                this.labelDescription = value;
                onPropertyChanged("LabelDescription");
            }
        }

        /// <summary>
        /// A brand code associated with one of the client's brands
        /// </summary>
        [JsonProperty("brandCode")]
        public string BrandCode 
        { 
            get 
            {
                return this.brandCode; 
            } 
            set 
            {
                this.brandCode = value;
                onPropertyChanged("BrandCode");
            }
        }

        /// <summary>
        /// Retail price per item for this SKU.
        /// </summary>
        [JsonProperty("retailPrice")]
        public string RetailPrice 
        { 
            get 
            {
                return this.retailPrice; 
            } 
            set 
            {
                this.retailPrice = value;
                onPropertyChanged("RetailPrice");
            }
        }

        /// <summary>
        /// Turns on and off a warning when inventory for this SKU drops below a specified value.
        /// </summary>
        [JsonProperty("backorderWarning", ItemConverterType = typeof(StringValuedEnumConverter))]
        public Models.BackorderWarningEnum? BackorderWarning 
        { 
            get 
            {
                return this.backorderWarning; 
            } 
            set 
            {
                this.backorderWarning = value;
                onPropertyChanged("BackorderWarning");
            }
        }

        /// <summary>
        /// An integer value greater than or equal to 0.
        /// </summary>
        [JsonProperty("backorderThreshold")]
        public int? BackorderThreshold 
        { 
            get 
            {
                return this.backorderThreshold; 
            } 
            set 
            {
                this.backorderThreshold = value;
                onPropertyChanged("BackorderThreshold");
            }
        }

        /// <summary>
        /// Retail price per item for this SKU.
        /// </summary>
        [JsonProperty("serviceFee")]
        public string ServiceFee 
        { 
            get 
            {
                return this.serviceFee; 
            } 
            set 
            {
                this.serviceFee = value;
                onPropertyChanged("ServiceFee");
            }
        }

        /// <summary>
        /// The weight of the product in pounds.
        /// </summary>
        [JsonProperty("weight")]
        public double Weight 
        { 
            get 
            {
                return this.weight; 
            } 
            set 
            {
                this.weight = value;
                onPropertyChanged("Weight");
            }
        }

        /// <summary>
        /// The minimum size slot this product can be fit into.
        /// </summary>
        [JsonProperty("slotEquivalent", ItemConverterType = typeof(StringValuedEnumConverter))]
        public Models.SlotEquivalentEnum SlotEquivalent 
        { 
            get 
            {
                return this.slotEquivalent; 
            } 
            set 
            {
                this.slotEquivalent = value;
                onPropertyChanged("SlotEquivalent");
            }
        }

        /// <summary>
        /// The number of slots of size `slotEquivalent` the product takes up.
        /// </summary>
        [JsonProperty("slotCount")]
        public double SlotCount 
        { 
            get 
            {
                return this.slotCount; 
            } 
            set 
            {
                this.slotCount = value;
                onPropertyChanged("SlotCount");
            }
        }
    }
} 