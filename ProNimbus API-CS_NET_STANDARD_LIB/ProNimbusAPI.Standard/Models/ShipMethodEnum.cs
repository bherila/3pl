/*
 * ProNimbusAPI.Standard
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
using System;
using System.Linq;
using System.Collections.Generic;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using ProNimbusAPI.Standard;
using ProNimbusAPI.Standard.Utilities;

namespace ProNimbusAPI.Standard.Models
{
    [JsonConverter(typeof(StringValuedEnumConverter))]
    public enum ShipMethodEnum
    {
        UP2, //TODO: Write general description for this method
        UP3, //TODO: Write general description for this method
        UPS, //TODO: Write general description for this method
        UP1, //TODO: Write general description for this method
        UPS7, //TODO: Write general description for this method
        FEX, //TODO: Write general description for this method
        FXE, //TODO: Write general description for this method
        FXG, //TODO: Write general description for this method
        FEH, //TODO: Write general description for this method
        FXP, //TODO: Write general description for this method
        FXO, //TODO: Write general description for this method
        GSC, //TODO: Write general description for this method
        GSP, //TODO: Write general description for this method
        GSO3, //TODO: Write general description for this method
        WCP, //TODO: Write general description for this method
        WCU, //TODO: Write general description for this method
        WCX, //TODO: Write general description for this method
        UDS, //TODO: Write general description for this method
        AZS, //TODO: Write general description for this method
        TRANSFER, //TODO: Write general description for this method
    }

    /// <summary>
    /// Helper for the enum type ShipMethodEnum
    /// </summary>
    public static class ShipMethodEnumHelper
    {
        //string values corresponding the enum elements
        private static List<string> stringValues = new List<string> { "UP2", "UP3", "UPS", "UP1", "UPS7", "FEX", "FXE", "FXG", "FEH", "FXP", "FXO", "GSC", "GSP", "GSO3", "WCP", "WCU", "WCX", "UDS", "AZS", "Transfer" };

        /// <summary>
        /// Converts a ShipMethodEnum value to a corresponding string value
        /// </summary>
        /// <param name="enumValue">The ShipMethodEnum value to convert</param>
        /// <returns>The representative string value</returns>
        public static string ToValue(ShipMethodEnum enumValue)
        {
            switch(enumValue)
            {
                //only valid enum elements can be used
                //this is necessary to avoid errors
                case ShipMethodEnum.UP2:
                case ShipMethodEnum.UP3:
                case ShipMethodEnum.UPS:
                case ShipMethodEnum.UP1:
                case ShipMethodEnum.UPS7:
                case ShipMethodEnum.FEX:
                case ShipMethodEnum.FXE:
                case ShipMethodEnum.FXG:
                case ShipMethodEnum.FEH:
                case ShipMethodEnum.FXP:
                case ShipMethodEnum.FXO:
                case ShipMethodEnum.GSC:
                case ShipMethodEnum.GSP:
                case ShipMethodEnum.GSO3:
                case ShipMethodEnum.WCP:
                case ShipMethodEnum.WCU:
                case ShipMethodEnum.WCX:
                case ShipMethodEnum.UDS:
                case ShipMethodEnum.AZS:
                case ShipMethodEnum.TRANSFER:
                    return stringValues[(int)enumValue];

                //an invalid enum value was requested
                default:
                    return null;
            }
        }

        /// <summary>
        /// Convert a list of ShipMethodEnum values to a list of strings
        /// </summary>
        /// <param name="enumValues">The list of ShipMethodEnum values to convert</param>
        /// <returns>The list of representative string values</returns>
        public static List<string> ToValue(List<ShipMethodEnum> enumValues)
        {
            if (null == enumValues)
                return null;

            return enumValues.Select(eVal => ToValue(eVal)).ToList();
        }

        /// <summary>
        /// Converts a string value into ShipMethodEnum value
        /// </summary>
        /// <param name="value">The string value to parse</param>
        /// <returns>The parsed ShipMethodEnum value</returns>
        public static ShipMethodEnum ParseString(string value)
        {
            int index = stringValues.IndexOf(value);
            if(index < 0)
                throw new InvalidCastException(string.Format("Unable to cast value: {0} to type ShipMethodEnum", value));

            return (ShipMethodEnum) index;
        }
    }
} 